# Environment Variables for Sanskrit Manuscript Reconstruction Portal

# Google Gemini AI API Key
# Get your key from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your-google-gemini-api-key-here

# Backend Configuration
BACKEND_PORT=8000
BACKEND_HOST=localhost

# Frontend Configuration
FRONTEND_PORT=3000
FRONTEND_URL=http://localhost:3000

# OCR Service (if running separately)
OCR_SERVICE_URL=http://localhost:8001

# Model Service (if running separately)
MODEL_SERVICE_URL=http://localhost:8002

# Neo4j Configuration (for knowledge graph - not fully implemented)
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=your-neo4j-password

# MinIO Configuration (for object storage - not integrated)
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin

# Development/Production Mode
ENV=development
DEBUG=true

# Logging
LOG_LEVEL=INFO
LOG_FILE=logs/app.log

# CORS Settings (for production, restrict this)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000

# Session Configuration
SESSION_SECRET_KEY=change-this-to-random-secret-in-production
SESSION_EXPIRY_HOURS=24

# Rate Limiting (to be implemented)
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# File Upload Limits
MAX_UPLOAD_SIZE_MB=10
ALLOWED_FILE_TYPES=jpg,jpeg,png,tiff,tif

# Model Configuration
MODEL_NAME=mt5-large
MODEL_PATH=./models/panini_t5
USE_GPU=false

# Feature Flags (hackathon - partial implementations)
ENABLE_KNOWLEDGE_GRAPH=false
ENABLE_EPISODIC_MEMORY=false
ENABLE_ADVANCED_OCR=false
ENABLE_DOCKER_SERVICES=false
