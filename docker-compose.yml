version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: 
      context: .
      dockerfile: docker/api-gateway.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OCR_SERVICE_URL=http://ocr-service:8001
      - MODEL_SERVICE_URL=http://model-service:8002
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    depends_on:
      - neo4j
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs

  # OCR Service
  ocr-service:
    build:
      context: .
      dockerfile: docker/ocr-service.Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./data:/app/data
    environment:
      - TESSDATA_PREFIX=/usr/share/tesseract-ocr/5/tessdata

  # Model Service (Simplified)
  model-service:
    build:
      context: .
      dockerfile: docker/model-service.Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./models:/app/models
      - ./data:/app/data
    environment:
      - MODEL_PATH=/app/models/panini_t5
      - KG_SERVICE_URL=http://neo4j:7474

  # Neo4j Knowledge Graph
  neo4j:
    image: neo4j:5.13
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs

  # Streamlit Frontend (Simplified)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend-simple.Dockerfile
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api-gateway:8000
    depends_on:
      - api-gateway

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

volumes:
  neo4j_data:
  neo4j_logs:
  minio_data: